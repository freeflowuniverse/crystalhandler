{"version":3,"file":"tf_chatbot.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/index.mjs","../../node_modules/engine.io-client/build/esm/globalThis.browser.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/yeast.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../src/store/chatStore.ts","../../node_modules/snarkdown/dist/snarkdown.es.js","../../src/components/chat/Logs.svelte","../../src/utils/isEmpty.ts","../../src/services/chatServer.ts","../../src/services/wsChatServer.ts","../../src/components/AnswerBtn.svelte","../../src/components/questions/QuestionChoice.svelte","../../src/components/questions/QuestionYn.svelte","../../src/components/questions/QuestionInput.svelte","../../src/utils/isBool.ts","../../src/components/questions/QuestionDropdown.svelte","../../src/components/questions/QuestionDate.svelte","../../src/components/questions/QuestionForm.svelte","../../src/components/questions/Message.svelte","../../src/components/chat/Questions.svelte","../../src/components/Chat.svelte","../../src/components/OpenChat.svelte","../../src/Chatbot.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { writable } from \"svelte/store\";\nimport { io } from \"socket.io-client\";\nfunction createChatStore() {\n    const socket = io(\"ws://localhost:8081\");\n    const store = writable({\n        open: true,\n        socket,\n        connected: false,\n        initQuestions: [\n            {\n                id: 0,\n                type: \"message\",\n                message: \"Welcome in threefold chatbot\",\n            },\n        ],\n        questions: [\n            {\n                id: 0,\n                type: \"message\",\n                message: \"Welcome in threefold chatbot\",\n            },\n        ],\n        logs: [],\n        currentAnswer: {},\n    });\n    socket.on(\"connect\", __updateConnected(true));\n    socket.on(\"disconnect\", __updateConnected(false));\n    function __updateConnected(connected) {\n        return () => {\n            store.update((store) => {\n                store.connected = connected;\n                return store;\n            });\n        };\n    }\n    const { subscribe, set, update } = store;\n    return {\n        subscribe,\n        set,\n        update,\n        addQuestion(question) {\n            return update((store) => {\n                store.questions.push(question);\n                return store;\n            });\n        },\n        cleanStore() {\n            return update((store) => {\n                store.questions = store.initQuestions;\n                store.logs = [];\n                return store;\n            });\n        },\n        deleteQuestion(questionId) {\n            return update((store) => {\n                store.questions = store.questions.filter((question) => question.id !== questionId);\n                return store;\n            });\n        },\n        deleteLog(deletedLog) {\n            return update((store) => {\n                store.logs = store.logs.filter((log) => log.id !== deletedLog.id);\n                return store;\n            });\n        },\n        answerQuestion(question, answer) {\n            return update((store) => {\n                store.questions = store.questions.map((q) => {\n                    if (q !== question)\n                        return q;\n                    // keep all the questions unanswered to enable edit/delete\n                    // q.answer = answer;\n                    // store.currentAnswer = answer;\n                    return q;\n                });\n                return store;\n            });\n        },\n        pushLogs(id, data) {\n            return update((store) => {\n                store.logs.push({ id, data: JSON.stringify(data) });\n                return store;\n            });\n        },\n    };\n}\n/* inject on window for testing */\nconst store = createChatStore();\nwindow.chat = { store };\nexport default store;\n","var e={\"\":[\"<em>\",\"</em>\"],_:[\"<strong>\",\"</strong>\"],\"*\":[\"<strong>\",\"</strong>\"],\"~\":[\"<s>\",\"</s>\"],\"\\n\":[\"<br />\"],\" \":[\"<br />\"],\"-\":[\"<hr />\"]};function n(e){return e.replace(RegExp(\"^\"+(e.match(/^(\\t| )+/)||\"\")[0],\"gm\"),\"\")}function r(e){return(e+\"\").replace(/\"/g,\"&quot;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")}export default function t(a,c){var o,l,g,s,p,u=/((?:^|\\n+)(?:\\n---+|\\* \\*(?: \\*)+)\\n)|(?:^``` *(\\w*)\\n([\\s\\S]*?)\\n```$)|((?:(?:^|\\n+)(?:\\t|  {2,}).+)+\\n*)|((?:(?:^|\\n)([>*+-]|\\d+\\.)\\s+.*)+)|(?:!\\[([^\\]]*?)\\]\\(([^)]+?)\\))|(\\[)|(\\](?:\\(([^)]+?)\\))?)|(?:(?:^|\\n+)([^\\s].*)\\n(-{3,}|={3,})(?:\\n+|$))|(?:(?:^|\\n+)(#{1,6})\\s*(.+)(?:\\n+|$))|(?:`([^`].*?)`)|(  \\n\\n*|\\n{2,}|__|\\*\\*|[_*]|~~)/gm,m=[],h=\"\",i=c||{},d=0;function f(n){var r=e[n[1]||\"\"],t=m[m.length-1]==n;return r?r[1]?(t?m.pop():m.push(n),r[0|t]):r[0]:n}function $(){for(var e=\"\";m.length;)e+=f(m[m.length-1]);return e}for(a=a.replace(/^\\[(.+?)\\]:\\s*(.+)$/gm,function(e,n,r){return i[n.toLowerCase()]=r,\"\"}).replace(/^\\n+|\\n+$/g,\"\");g=u.exec(a);)l=a.substring(d,g.index),d=u.lastIndex,o=g[0],l.match(/[^\\\\](\\\\\\\\)*\\\\$/)||((p=g[3]||g[4])?o='<pre class=\"code '+(g[4]?\"poetry\":g[2].toLowerCase())+'\"><code'+(g[2]?' class=\"language-'+g[2].toLowerCase()+'\"':\"\")+\">\"+n(r(p).replace(/^\\n+|\\n+$/g,\"\"))+\"</code></pre>\":(p=g[6])?(p.match(/\\./)&&(g[5]=g[5].replace(/^\\d+/gm,\"\")),s=t(n(g[5].replace(/^\\s*[>*+.-]/gm,\"\"))),\">\"==p?p=\"blockquote\":(p=p.match(/\\./)?\"ol\":\"ul\",s=s.replace(/^(.*)(\\n|$)/gm,\"<li>$1</li>\")),o=\"<\"+p+\">\"+s+\"</\"+p+\">\"):g[8]?o='<img src=\"'+r(g[8])+'\" alt=\"'+r(g[7])+'\">':g[10]?(h=h.replace(\"<a>\",'<a href=\"'+r(g[11]||i[l.toLowerCase()])+'\">'),o=$()+\"</a>\"):g[9]?o=\"<a>\":g[12]||g[14]?o=\"<\"+(p=\"h\"+(g[14]?g[14].length:g[13]>\"=\"?1:2))+\">\"+t(g[12]||g[15],i)+\"</\"+p+\">\":g[16]?o=\"<code>\"+r(g[16])+\"</code>\":(g[17]||g[1])&&(o=f(g[17]||\"--\"))),h+=l,h+=o;return(h+a.substring(d)+$()).replace(/^\\n+|\\n+$/g,\"\")}\n//# sourceMappingURL=snarkdown.es.js.map\n","<svelte:options tag=\"tf-chatlogs\" />\n\n<script lang=\"ts\">\n  import chatStore from \"../../store/chatStore\";\n  import snarkdown from \"snarkdown\";\n\n  function closeChat() {\n    $chatStore.open = false;\n    document.querySelector(\"html\").style.overflow = null;\n  }\n\n  function deleteLog(log) {\n    chatStore.deleteLog(log);\n  }\n\n  // const getLog = (log) => {\n  //   const data = JSON.parse(log.data);\n  //   console.log(data);\n  //   if (typeof data === \"string\") {\n  //     console.log(\"isStirng\");\n  //     return data;\n  //   } else {\n  //     console.log(\"else\");\n  //     let logs = \"\";\n  //     for (let query of data) {\n  //       logs += `${Object.keys(query)} ${Object.values(query)}\\n`;\n  //     }\n  //     return logs;\n  //   }\n  // };\n\n  const getLog = (log) => {\n    // console.log(typeof log[1]);\n    // console.log(log[1]);\n    if (typeof log[1] === \"string\") return snarkdown(`${log[1]}`);\n    return JSON.stringify(log[1]);\n  };\n</script>\n\n<section\n  style:height=\"100%\"\n  style:width=\"50%\"\n  style:border-left=\"1px solid rgba(0, 74, 181, 0.175)\"\n  style:display=\"flex\"\n  style:flex-direction=\"column\"\n>\n  <div\n    style:background=\"linear-gradient(125deg, #1972F5 -10%, #004AB5 100%)\"\n    style:font-size=\"12px\"\n    style:color=\"white\"\n    style:padding=\"15px\"\n    style:display=\"flex\"\n    style:justify-content=\"space-between\"\n    style:align-items=\"center\"\n  >\n    <h2 style:margin=\"0\" style:font-size=\"1.6rem\">Logs!</h2>\n    <div>\n      {#if $chatStore.connected}\n        <span class=\"tag is-success is-normal\">Connected</span>\n      {:else}\n        <span class=\"tag is-danger is-normal\">\n          Connecting <i class=\"ml-1 fas fa-spinner fa-pulse\" />\n        </span>\n      {/if}\n      <i\n        on:click={closeChat}\n        class=\"ml-2 fa-solid fa-xmark\"\n        style:font-size=\"15px\"\n        style:cursor=\"pointer\"\n      />\n    </div>\n  </div>\n\n  <div nice-scroll style:padding=\"1rem \" style:overflow-y=\"auto\">\n    {#each $chatStore.logs as log}\n      <div\n        style=\"align-items: center\"\n        class=\"is-flex is-justify-content-space-between\t\"\n      >\n        <!-- comment for now. todo better parsing. -->\n        <!-- {@html snarkdown(JSON.parse(JSON.parse(log.data)))} -->\n        <!-- {console.log(Object.values(JSON.parse(log.data)))} -->\n\n        <!-- {@html snarkdown(`${Object.values(JSON.parse(log.data))}`)} -->\n        {#each Object.entries(JSON.parse(log.data)) as data}\n          <div class=\"is-flex is-justify-content-flex-start\t\">\n            <br />\n            {@html getLog(data)}\n          </div>\n        {/each}\n\n        <!-- svelte-ignore a11y-missing-attribute -->\n        <a on:click={() => deleteLog(log)}>\n          <i\n            class=\"fa fa-trash fa-2xl\"\n            style=\"color: black;\"\n            aria-hidden=\"true\"\n          />\n        </a>\n      </div>\n      <br />\n    {/each}\n  </div>\n</section>\n","export function isEmpty(value) {\n    return value === null || value === undefined;\n}\n","import WsChatServer from \"./wsChatServer\";\nexport class ChatServer extends WsChatServer {\n    answerQuestion(question, answer) {\n        if (question.id === 0)\n            return super.listServices(question, answer);\n        super.askForService(question, answer);\n    }\n}\n","import chatStore from \"../store/chatStore\";\nimport { get } from \"svelte/store\";\nexport default class WsChatServer {\n    constructor() {\n        this.socket = get(chatStore).socket;\n    }\n    listServices(question, answer) {\n        return this.socket.emit(\"services\", (data) => {\n            chatStore.answerQuestion(question, answer);\n            chatStore.addQuestion(data);\n        });\n    }\n    askForService(question, answer) {\n        return this.socket.emit(\"askForService\", answer, ({ logs, services }) => {\n            chatStore.answerQuestion(question, answer);\n            chatStore.pushLogs(question.id, logs);\n            chatStore.addQuestion(services);\n        });\n    }\n}\n","<svelte:options tag=\"tf-answer-btn\" />\n\n<script lang=\"ts\">\n  export let text: string;\n  export let disabled: boolean;\n  export let readonly: boolean;\n  export let selected: boolean;\n</script>\n\n<button\n  class=\"button is-link mt-1 mb-1 mr-1\"\n  class:is-outlined={!selected}\n  style:white-space=\"initial\"\n  style:height=\"auto\"\n  style:text-align=\"left\"\n  {disabled}\n  {readonly}\n  on:click\n>\n  {text}\n</button>\n","<svelte:options tag=\"tf-question-choice\" />\n\n<script lang=\"ts\">\n  import type { IQuestionChoice } from \"../../types/questions\";\n  import { isEmpty } from \"../../utils/isEmpty\";\n  import { ChatServer } from \"../../services/chatServer\";\n  import AnswerBtn from \"../AnswerBtn.svelte\";\n  import snarkdown from \"snarkdown\";\n  import chatStore from \"../../store/chatStore\";\n\n  export let question: IQuestionChoice;\n  export let form: boolean;\n\n  let answer: any;\n\n  let selectedChoices: any[] = [];\n\n  function onToggleAnswer(answer: any) {\n    return () => {\n      if (!question.multi) {\n        selectedChoices = answer;\n        return onSubmitAnswer();\n      }\n\n      // toggle push/pop from selected and from store\n      const index = selectedChoices.findIndex((a) => a === answer);\n      \n\n      if (index === -1) {\n\n        selectedChoices.push(answer);\n\n        // chatStore.update((oldStore) => {\n        //   oldStore.currentAnswer[question.id] = selectedChoices\n        //   console.log(oldStore.currentAnswer);\n        //   return oldStore;\n        // });\n      } else {\n        \n        selectedChoices = selectedChoices.filter((a) => a !== answer);\n\n        // chatStore.update((oldStore) => {\n        //   oldStore.currentAnswer[question.id] = selectedChoices\n        //   console.log(oldStore.currentAnswer);\n        //   return oldStore;\n        // });\n      }\n\n      // if (index === 0) selectedChoices = [...selectedChoices, answer];\n    };\n  }\n\n  function onSubmitAnswer() {\n    const chatserver = new ChatServer();\n    chatserver.answerQuestion(question, selectedChoices);\n  }\n\n  const onDelete = () => {\n    // just update the store to remove the question from UI.\n    chatStore.update((store) => {\n      store.questions = store.questions.filter(\n        (storeQuestion) => storeQuestion.id !== question.id\n      );\n      return store;\n    });\n  };\n</script>\n\n{#if question}\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <div class=\"content\">\n        {question.id}\n        <div>{@html snarkdown(question.descr)}</div>\n\n        {#if !form}\n          <hr />\n        {/if}\n\n        {#each question.choices as [value, label]}\n          <AnswerBtn\n            text={label}\n            disabled={!isEmpty(answer) && !selectedChoices.includes(value)}\n            readonly={!isEmpty(question.answer) &&\n              selectedChoices.includes(value)}\n            selected={selectedChoices.includes(value)}\n            on:click={!isEmpty(answer) ? undefined : onToggleAnswer(value)}\n          />\n        {/each}\n      </div>\n    </div>\n\n    {#if !form}\n      <footer class=\"card-footer\">\n        <button\n          on:click={onDelete}\n          class=\"button is-danger is-light card-footer-item\">Delete</button\n        >\n        {#if question.multi}\n          <button\n            disabled={selectedChoices === []}\n            on:click={onSubmitAnswer}\n            class=\"button is-primary is-light card-footer-item\">Next</button\n          >\n        {/if}\n      </footer>\n    {/if}\n  </div>\n{/if}\n","<svelte:options tag=\"tf-question-yn\" />\n\n<script lang=\"ts\">\n  import type { IQuestionYn } from \"../../types/questions\";\n  import { ChatServer } from \"../../services/chatServer\";\n  import snarkdown from \"snarkdown\";\n  import chatStore from \"../../store/chatStore\";\n\n  export let question: IQuestionYn;\n  export let form: boolean = false;\n\n  let answer: any;\n\n  $: {\n    if (form && answer !== undefined) {\n      updateAnswer();\n    }\n  }\n\n  const updateAnswer = () => {\n    chatStore.update((oldStore) => {\n      oldStore.currentAnswer[question.id] = answer;\n      // console.log(oldStore.currentAnswer)\n      return oldStore;\n    });\n  };\n\n  const onDelete = () => {\n    // just update the store to remove the question from UI.\n    chatStore.update((store) => {\n      store.questions = store.questions.filter(\n        (storeQuestion) => storeQuestion.id !== question.id\n      );\n      return store;\n    });\n  };\n\n  const onSubmit = () => {\n    const chatserver = new ChatServer();\n    chatserver.answerQuestion(question, answer);\n  };\n</script>\n\n{#if question}\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <div class=\"content\">\n        {question.id}\n        <div>{@html snarkdown(question.question)}</div>\n\n        {#if !form}\n          <hr />\n        {/if}\n\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              bind:group={answer}\n              name=\"scoops\"\n              value={\"yes\"}\n            />\n            Yes\n          </label>\n\n          <label>\n            <input\n              type=\"radio\"\n              bind:group={answer}\n              name=\"scoops\"\n              value={\"no\"}\n            />\n            No\n          </label>\n        </div>\n      </div>\n    </div>\n\n    {#if !form}\n      <footer class=\"card-footer\">\n        <button\n          on:click={onDelete}\n          class=\"button is-danger is-light card-footer-item\">Delete</button\n        >\n        <button\n          disabled={answer === undefined}\n          on:click={onSubmit}\n          class=\"button is-primary is-light card-footer-item\">Next</button\n        >\n      </footer>\n    {/if}\n  </div>\n{/if}\n","<svelte:options tag=\"tf-question-input\" />\n\n<script lang=\"ts\">\n  import type { IQuestion } from \"../../types/questions\";\n  import { isBool } from \"../../utils/isBool\";\n  import { ChatServer } from \"../../services/chatServer\";\n  import snarkdown from \"snarkdown\";\n\n  import chatStore from \"../../store/chatStore\";\n\n  export let question: IQuestion;\n  export let form: boolean = false;\n\n  let answer: any = undefined;\n  let answered = false;\n\n  function isValid(answer: any) {\n    /* not touched yet! */\n    if (answer === null) return true;\n\n    if (question.returntype === \"string\") {\n      const r = new RegExp(question.regex);\n      return typeof answer === \"string\" && r.test(answer);\n    }\n\n    if (question.returntype === \"bool\") {\n      return isBool(answer);\n    }\n\n    const _answer = +answer;\n    return (\n      typeof _answer === \"number\" &&\n      !isNaN(_answer) &&\n      _answer >= question.min &&\n      _answer <= question.max\n    );\n  }\n\n  function getErrorMsg() {\n    if (question.returntype === \"string\") return question.regex_errormsg;\n    return \"Invalid input value\";\n  }\n\n  $: {\n    if (form && answer !== undefined) {\n      updateAnswer();\n    }\n  }\n\n  const updateAnswer = () => {\n    chatStore.update((oldStore) => {\n      oldStore.currentAnswer[question.id] = answer;\n      // console.log(oldStore.currentAnswer)\n      return oldStore;\n    });\n  };\n\n  const onDelete = () => {\n    // just update the store to remove the question from UI.\n    chatStore.update((store) => {\n      store.questions = store.questions.filter(\n        (storeQuestion) => storeQuestion.id !== question.id\n      );\n      return store;\n    });\n  };\n\n  const onSubmit = () => {\n    const chatserver = new ChatServer();\n    chatserver.answerQuestion(question, answer);\n  };\n</script>\n\n{#if question}\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <div class=\"content\">\n        {question.id}\n        <div>{@html snarkdown(question.question)}</div>\n\n        {#if !form}\n          <hr />\n        {/if}\n\n        <div class=\"field\">\n          <div class=\"control\">\n            {#if question.returntype === \"string\"}\n              <input\n                class=\"input\"\n                type=\"text\"\n                placeholder={question.descr}\n                bind:value={answer}\n                readonly={answered}\n              />\n            {:else if question.returntype === \"bool\"}\n              <label class=\"radio\">\n                <input\n                  type=\"radio\"\n                  name=\"answer\"\n                  value={true}\n                  bind:group={answer}\n                  readonly={answered}\n                  disabled={answered}\n                />\n                Yes\n              </label>\n              <label class=\"radio\">\n                <input\n                  type=\"radio\"\n                  name=\"answer\"\n                  value={false}\n                  bind:group={answer}\n                  readonly={answered}\n                  disabled={answered}\n                />\n                No\n              </label>\n            {:else}\n              <input\n                class=\"input\"\n                type=\"number\"\n                placeholder={question.descr}\n                bind:value={answer}\n                readonly={answered}\n              />\n            {/if}\n          </div>\n\n          {#if !isValid(answer)}\n            <p class=\"help is-danger\">{getErrorMsg()}</p>\n          {/if}\n        </div>\n      </div>\n    </div>\n    {#if !form}\n      <footer class=\"card-footer\">\n        <button\n          on:click={onDelete}\n          class=\"button is-danger is-light card-footer-item\">Delete</button\n        >\n        <button\n          disabled={answer === undefined}\n          on:click={onSubmit}\n          class=\"button is-primary is-light card-footer-item\">Next</button\n        >\n      </footer>\n    {/if}\n  </div>\n{/if}\n","export function isBool(value) {\n    return value === true || value === false;\n}\n","<svelte:options tag=\"tf-question-dropdown\" />\n\n<script lang=\"ts\">\n  import type { IQuestionDropdown } from \"../../types/questions\";\n  import { ChatServer } from \"../../services/chatServer\";\n  import snarkdown from \"snarkdown\";\n  import chatStore from \"../../store/chatStore\";\n\n  export let question: IQuestionDropdown;\n  export let form: boolean = false;\n\n  let answer: any;\n\n  const onDelete = () => {\n    // just update the store to remove the question from UI.\n    chatStore.update((store) => {\n      store.questions = store.questions.filter(\n        (storeQuestion) => storeQuestion.id !== question.id\n      );\n      return store;\n    });\n  };\n\n  const onSubmit = () => {\n    const chatserver = new ChatServer();\n    chatserver.answerQuestion(question, answer);\n  };\n\n  $: {\n    if (form && answer !== undefined) {\n      updateAnswer();\n    }\n  }\n\n  const updateAnswer = () => {\n    chatStore.update((oldStore) => {\n      oldStore.currentAnswer[question.id] = answer;\n      // console.log(oldStore.currentAnswer)\n      return oldStore;\n    });\n  };\n\n</script>\n\n{#if question}\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <div class=\"content\">\n        {question.id}\n        <div>{@html snarkdown(question.question)}</div>\n\n        {#if !form}\n          <hr />\n        {/if}\n\n        <div class=\"select\">\n          <select bind:value={answer}>\n            <option disabled value={undefined}>{question.descr}...</option>\n            {#each question.choices as choice}\n              <option value={choice[1]}>{choice[1]}</option>\n            {/each}\n          </select>\n        </div>\n      </div>\n    </div>\n\n    {#if !form}\n      <footer class=\"card-footer\">\n        <button\n          on:click={onDelete}\n          class=\"button is-danger is-light card-footer-item\">Delete</button\n        >\n        <button\n          disabled={answer === undefined}\n          on:click={onSubmit}\n          class=\"button is-primary is-light card-footer-item\">Next</button\n        >\n      </footer>\n    {/if}\n  </div>\n{/if}\n","<svelte:options tag=\"tf-question-date\" />\n\n<script lang=\"ts\">\n  import type { IQuestionDate } from \"../../types/questions\";\n  import { ChatServer } from \"../../services/chatServer\";\n  import snarkdown from \"snarkdown\";\n  import chatStore from \"../../store/chatStore\";\n\n  export let question: IQuestionDate;\n  export let form: boolean = false;\n\n  let answer: any = undefined;\n\n  $: {\n    if (form && answer !== undefined) {\n      updateAnswer();\n    }\n  }\n\n  const updateAnswer = () => {\n    chatStore.update((oldStore) => {\n      oldStore.currentAnswer[question.id] = answer;\n      // console.log(oldStore.currentAnswer)\n      return oldStore;\n    });\n  };\n\n  const onDelete = () => {\n    // just update the store to remove the question from UI.\n    chatStore.update((store) => {\n      store.questions = store.questions.filter(\n        (storeQuestion) => storeQuestion.id !== question.id\n      );\n      return store;\n    });\n  };\n\n  const onSubmit = () => {\n    const chatserver = new ChatServer();\n    chatserver.answerQuestion(question, answer);\n  };\n</script>\n\n{#if question}\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <div class=\"content\">\n        {question.id}\n        <div>{@html snarkdown(question.question)}</div>\n\n        {#if !form}\n          <hr />\n        {/if}\n        <input type=\"date\" bind:value={answer} />\n      </div>\n    </div>\n\n    {#if !form}\n\n    <footer class=\"card-footer\">\n      <button\n        on:click={onDelete}\n        class=\"button is-danger is-light card-footer-item\">Delete</button\n      >\n      <button\n        disabled={answer === undefined}\n        on:click={onSubmit}\n        class=\"button is-primary is-light card-footer-item\">Next</button\n      >\n    </footer>\n    {/if}\n\n  </div>\n{/if}\n","<svelte:options tag=\"tf-question-form\" />\n\n<script lang=\"ts\">\n  import type { IQuestionForm } from \"../../types/questions\";\n  import { ChatServer } from \"../../services/chatServer\";\n  import snarkdown from \"snarkdown\";\n  import chatStore from \"../../store/chatStore\";\n\n  import type { Questions } from \"../../types/questions\";\n\n  import QuestionChoice from \"../questions/QuestionChoice.svelte\";\n  import QuestionYn from \"../questions/QuestionYn.svelte\";\n  import QuestionInput from \"../questions/QuestionInput.svelte\";\n  import QuestionDropdown from \"../questions/QuestionDropdown.svelte\";\n  import QuestionDate from \"../questions/QuestionDate.svelte\";\n\n  function __getCmp({ type }: Questions) {\n    if (type === \"yn\") return QuestionYn;\n    if (type === \"question_choice\") return QuestionChoice;\n    if (type === \"question\") return QuestionInput;\n    if (type === \"question_dropdown\") return QuestionDropdown;\n    if (type === \"q-date\") return QuestionDate;\n  }\n\n  export let question: IQuestionForm;\n\n  let answer: any = undefined;\n\n  $: {\n    if (answer !== undefined) updateAnswer();\n  }\n\n  const updateAnswer = () => {\n    chatStore.update((oldStore) => {\n      oldStore.currentAnswer = answer;\n      return oldStore;\n    });\n  };\n\n  const onDelete = () => {\n    // just update the store to remove the question from UI.\n    chatStore.update((store) => {\n      store.questions = store.questions.filter(\n        (storeQuestion) => storeQuestion.id !== question.id\n      );\n      return store;\n    });\n  };\n\n  const onSubmit = () => {\n    // get the value from the store.\n    chatStore.subscribe((store) => {\n      answer = store.currentAnswer;\n    });\n\n    // console.log({ answer });\n    // then answer to the server.\n    const chatserver = new ChatServer();\n    chatserver.answerQuestion(question, answer);\n  };\n</script>\n\n{#if question}\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <div class=\"content\">\n        <div>{@html snarkdown(question.description)}</div>\n        <hr />\n\n        <form>\n          {#each question.form as question}\n            <svelte:component\n              this={__getCmp(question)}\n              {question}\n              form={true}\n            />\n          {/each}\n        </form>\n      </div>\n    </div>\n\n    <footer class=\"card-footer\">\n      {#if question.id !== 0}\n        <button\n          on:click={onDelete}\n          class=\"button is-danger is-light card-footer-item\">Delete</button\n        >\n      {/if}\n\n      <button\n        on:click={onSubmit}\n        class=\"button is-primary is-light card-footer-item\">Next</button\n      >\n    </footer>\n  </div>\n{/if}\n","<svelte:options tag=\"tf-message\" />\n\n<script lang=\"ts\">\n  import type { IMessage } from \"../../types/questions\";\n  import { ChatServer } from \"../../services/chatServer\";\n  import snarkdown from \"snarkdown\";\n  import chatStore from \"../../store/chatStore\";\n  import { createEventDispatcher } from 'svelte';\n\n  export let question: IMessage;\n  export let form: boolean = false;\n\n  let answer: any;\n\n  const onDelete = () => {\n    // just update the store to remove the question from UI.\n    chatStore.update((store) => {\n      store.questions = store.questions.filter(\n        (storeQuestion) => storeQuestion.id !== question.id\n      );\n      return store;\n    });\n  };\n\n  const onSubmit = () => {\n    const chatserver = new ChatServer();\n    chatserver.answerQuestion(question, answer);\n  };\n</script>\n\n{#if question}\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <div class=\"content\">\n        {question.id}\n        <div>{@html snarkdown(question.message)}</div>\n      </div>\n    </div>\n\n    {#if !form}\n      <footer class=\"card-footer\">\n        {#if question.id !== 0}\n          <button\n            on:click={onDelete}\n            class=\"button is-danger is-light card-footer-item\">Delete</button\n          >\n        {/if}\n\n        <button\n          on:click={onSubmit}\n          class=\"button is-primary is-light card-footer-item\">Next</button\n        >\n      </footer>\n    {/if}\n  </div>\n{/if}\n","<svelte:options tag=\"tf-chat-questions\" />\n\n<script lang=\"ts\">\n  import chatStore from \"../../store/chatStore\";\n  import type { Questions } from \"../../types/questions\";\n\n  import QuestionChoice from \"../questions/QuestionChoice.svelte\";\n  import QuestionYn from \"../questions/QuestionYn.svelte\";\n  import QuestionInput from \"../questions/QuestionInput.svelte\";\n  import QuestionDropdown from \"../questions/QuestionDropdown.svelte\";\n  import QuestionDate from \"../questions/QuestionDate.svelte\";\n  import QuestionForm from \"../questions/QuestionForm.svelte\";\nimport Message from \"../questions/Message.svelte\";\n\n  function __getCmp({ type }: Questions) {\n    if (type === \"yn\") return QuestionYn;\n    if (type === \"question_choice\") return QuestionChoice;\n    if (type === \"question\") return QuestionInput;\n    if (type === \"question_dropdown\") return QuestionDropdown;\n    if (type === \"q-date\") return QuestionDate;\n    if (type === \"question_form\") return QuestionForm;\n    if (type === 'message') return Message;\n  }\n\n  const deleteAllQs = () => {\n    chatStore.cleanStore();\n  };\n\n  const deleteSelected = (questionId) => {\n    chatStore.deleteQuestion(questionId);\n  };\n</script>\n\n<section\n  style:height=\"100%\"\n  style:width=\"50%\"\n  style:display=\"flex\"\n  style:flex-direction=\"column\"\n>\n  <div\n    style:background=\"linear-gradient(125deg, #1972F5 -10%, #004AB5 100%)\"\n    style:font-size=\"12px\"\n    style:color=\"white\"\n    style:padding=\"15px\"\n  >\n    <div\n      class=\"is-flex is-justify-content-space-between\"\n      style=\"align-items: center\"\n    >\n      <h2 style:margin=\"0\" style:font-size=\"1.6rem\">Questions?</h2>\n      <!-- svelte-ignore a11y-missing-attribute -->\n      <a on:click={deleteAllQs}>\n        <i\n          class=\"fa fa-trash fa-2xl\"\n          style=\"color: white;\"\n          aria-hidden=\"true\"\n        />\n      </a>\n    </div>\n  </div>\n\n  <div nice-scroll style:padding=\"1rem \" style:overflow-y=\"auto\">\n    {#each $chatStore.questions as question}\n      <svelte:component this={__getCmp(question)} {question} />\n\n      <br />\n    {/each}\n  </div>\n</section>\n","<svelte:options tag=\"tf-chat\" />\n\n<script lang=\"ts\">\n  import chatStore from \"../store/chatStore\";\n  import ChatLogs from \"./chat/Logs.svelte\";\n  import ChatQuestions from \"./chat/Questions.svelte\";\n</script>\n\n<section\n  style:width=\"100vw\"\n  style:position=\"fixed\"\n  style:top=\"0\"\n  style:left=\"0\"\n  style:background-color=\"#f5f8fb\"\n  style:z-index=\"9999\"\n  style:height=\"100vh\"\n  style:display=\"flex\"\n  style:transition=\"opacity 0.4s, visibility 0.4s, transform 0.4s\"\n  style:opacity={$chatStore.open ? 1 : 0}\n  style:visibility={$chatStore.open ? \"visible\" : \"hidden\"}\n  style:pointer-events={$chatStore.open ? \"all\" : \"none\"}\n  style:transform=\"translateY({$chatStore.open ? 0 : \"15px\"})\"\n>\n  <ChatQuestions />\n  <ChatLogs />\n</section>\n","<svelte:options tag=\"tf-openchat\" />\n\n<script lang=\"ts\">\n  import chatStore from \"../store/chatStore\";\n\n  function openChat() {\n    $chatStore.open = true;\n    document.querySelector(\"html\").style.overflow = \"hidden\";\n  }\n</script>\n\n<button\n  on:click={openChat}\n  style:width=\"60px\"\n  style:height=\"60px\"\n  style:position=\"fixed\"\n  style:bottom=\"15px\"\n  style:right=\"15px\"\n  style:border-radius=\"50%\"\n  style:background-color=\"#1972F5\"\n  style:color=\"white\"\n  style:border=\"none\"\n  style:display=\"flex\"\n  style:justify-content=\"center\"\n  style:align-items=\"center\"\n  style:cursor=\"pointer\"\n  style:z-index=\"999\"\n>\n  <i class=\"fa-solid fa-message\" style:font-size=\"28px\" />\n</button>\n","<svelte:options tag=\"tf-chatbot\" />\n\n<script lang=\"ts\">\n  import Chat from \"./components/Chat.svelte\";\n  import OpenChat from \"./components/OpenChat.svelte\";\n</script>\n\n<section\n  style:font-family={'BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif'}\n  style:color=\"#4a4a4a\"\n  style:font-size=\"1em\"\n  style:font-weight=\"400\"\n  style:line-height=\"1.5\"\n  >\n  <!-- Start global css style for all components -->\n  <style>\n    [nice-scroll]::-webkit-scrollbar {\n      width: 10px;\n    }\n\n    [nice-scroll]::-webkit-scrollbar-track {\n      box-shadow: inset 0 0 0 10px rgba(0, 0, 0, 0.05);\n    }\n\n    [nice-scroll]::-webkit-scrollbar-thumb {\n      background-color: #999;\n    }\n\n    h1 {\n      font-size: 32px;\n    }\n    h2 {\n      font-size: 24px;\n    }\n\n    h3 {\n      font-size: 20.8px;\n    }\n    h4 {\n      font-size: 16px;\n    }\n    h5 {\n      font-size: 12.8px;\n    }\n    h6 {\n      font-size: 11.2px;\n    }\n  </style>\n  <!-- End global css style for all components -->\n\n  <Chat />\n  <OpenChat />\n</section>\n\n<style lang=\"scss\" scoped>\n  @import \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\";\n  @import \"https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css\";\n</style>\n","/* Append font awesome url in head so it works with web components */\nconst iconsLink = document.createElement(\"link\");\niconsLink.rel = \"stylesheet\";\niconsLink.href =\n    \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css\";\ndocument.head.append(iconsLink);\n/* Import the entry chat component */\nimport \"./Chatbot.svelte\";\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","toggle_class","toggle","classList","HtmlTag","constructor","is_svg","this","e","n","c","html","h","m","nodeName","createElementNS","t","innerHTML","Array","from","childNodes","p","attribute_to_object","attributes","result","current_component","set_current_component","bubble","type","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","SvelteElement","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","rest","hydrate","nodes","children","l","intro","HTMLElement","super","attachShadow","mode","connectedCallback","slotted","attributeChangedCallback","_oldValue","newValue","disconnectedCallback","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","toString","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","cb","emit","args","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","TransportError","Error","reason","description","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","alphabet","prev","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","hasXHR2","responseType","Request","uri","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","path","polling","location","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","replace","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","utf8Length","ceil","byteLength","size","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Decoder","reviver","reconstructor","decodeString","BINARY_EVENT","BINARY_ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","EVENT","ACK","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","stop","subscribers","new_value","run_queue","subscriber","invalidate","initQuestions","questions","logs","currentAnswer","__updateConnected","addQuestion","question","cleanStore","deleteQuestion","questionId","deleteLog","deletedLog","log","answerQuestion","answer","q","pushLogs","createChatStore","chat","_","RegExp","match","g","s","u","f","$","lastIndex","span","raw_value","div","br","html_tag","entries","create_if_block","each_value","section","div1","h2","div0","div2","chatStore","$chatStore","querySelector","overflow","snarkdown","isEmpty","ChatServer","get","listServices","askForService","services","button","disabled","readonly","t0_value","descr","create_if_block_3","choices","create_if_block_1","div3","current","t0","each_blocks","hr","includes","answerbtn_changes","if_block","multi","create_if_block_2","footer","form","selectedChoices","onSubmitAnswer","$$invalidate","findIndex","storeQuestion","div4","label0","input0","label1","input1","button1","button1_disabled_value","button0","oldStore","show_if","create_if_block_5","returntype","create_if_block_4","div5","input_placeholder_value","answered","regex","isBool","_answer","isNaN","regex_errormsg","t4_value","t4","t_value","option_value_value","selected_option","select_value","switch_value","QuestionYn","QuestionChoice","QuestionInput","QuestionDropdown","QuestionDate","QuestionForm","Message","style_transform","iconsLink","rel","head"],"mappings":"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"}